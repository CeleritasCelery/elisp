#+title: Göktuğ's Emacs Lisp Bits
#+options: toc:t num:nil tasks:todo
#+category: elisp

* Introduction
:PROPERTIES:
:CUSTOM_ID: introduction
:END:

This repository is a swarm for all the Elisp stuff I published.  Most
files will have licence information in it, which don't are licenced
under the MIT licence, whose text is available in the LICENSE file.

* What's here?
:PROPERTIES:
:CUSTOM_ID: whatshere
:END:

Below is a listing of all the programs here:

** =forecast.el=
:PROPERTIES:
:CUSTOM_ID: forecast-el
:END:
«forecast.el» is a weather forecast report generator, currently using
data from [[https://darksky.net][Dark Sky]] (but I plan to add other backends in the future).

# [[./forecast.el.png]]

** =paper-theme.el=
:PROPERTIES:
:CUSTOM_ID: paper
:END:
«Paper» is a little, minimal emacs theme that is meant to be simple
and consistent.

It was first intended to resemble the look of paper, but has diverged
from that objective.  Still, though, I keep calling it Paper, as I
like that name.

Paper uses a small colour palette over all the elements.  Org headings
are specially treated with a palette of equidistant colours.  The
colours and heading font sizes are calculated using base and factor
values which can be edited.  See source.

It's most adapted for ELisp-Org users, as I'm one such user, though it
works fine with Markdown, Textile, Python, JavaScript, Html, Diff,
Magit, etc.

# [[./paper1.gif]]

** =pass-listing.el=
:PROPERTIES:
:CUSTOM_ID: pass-listing-el
:END:
«pass-listing» is a simple frontend to the [[https://www.passwordstore.org/][pass]] utility.  It uses the
functions from =password-store.el=.

** =bsdpkg.el=
:PROPERTIES:
:CUSTOM_ID: bsdpkg-el
:END:
«bsdpkg» is an Emacs interface to FreeBSD =pkg(1)=.  It's planned to
genericise the package to support all *BSD packaging systems, and the
module is written with that sort of extensibility in mind.

#+BEGIN_QUOTE
This is experimental, and kind-of obsoleted as I don't use BSD at
the moment.  I'd be happy to accept changes or to hand it over if
anybody will be interested.
#+END_QUOTE

** =bibliothek.el=
:PROPERTIES:
:CUSTOM_ID: bibliothek-el
:END:
«bibliothek.el» is a personal PDF library manager.  Presently it only
displays a concatenated tabular list of PDF files from many locations,
and allows to open the files or view metadata from that list.  Find
below a screenshot of the default view.  I intend to add some
functionality for moving PDF files around and editing the metadata.

# [[./bibliothek.png]]

** =gk-unilat.el=
:PROPERTIES:
:CUSTOM_ID: gk-unilat-el
:END:
«gk-unilat» is a unified input method for European variants of the
Latin alphabet.

It aims to provide comprehensive support for typing characters found
in different European versions of the Latin alphabet, in a unified,
predictable way.

** =gk-greek.el=
:PROPERTIES:
:CUSTOM_ID: gk-greek-el
:END:
«gk-greek» is a transliterating input method for modern Greek.

Translates input in Greek latinization into Greek alphabet.  Mappings
are based on vocal correspondence and common modern transliteration.

** =org-variable-pitch.el=
:PROPERTIES:
:CUSTOM_ID: ovp
:END:
«org-variable-pitch.el» is a minor mode that enables
‘variable-pitch-mode’ in the current Org-mode buffer, and sets some
particular faces up so that they are are rendered in fixed-width font.
Also, indentation, list bullets and checkboxes are displayed in
monospace, in order to keep the shape of the outline.

** =dollar.el=
:PROPERTIES:
:CUSTOM_ID: dollar-el
:END:
This package provides a macro named $ where in its body symbols in the
form $N where N is a positive integer are to stand for positional
arguments to the generated lambda.

If the car of the body is a vector though, that vector becomes the
argument list of the new lambda.

Some examples:

#+BEGIN_SRC elisp
($ (message "Hello, %s" $1))
(funcall ($ (* $1 $1)) 2)
(reduce ($ [a b] (concat a b)) (list "hel" "lo"))
#+END_SRC

* Issues
Please mention the relevant filename in your issue title.

** TODO OVP minor mode updates the buffer partially when not run in the org mode hook
Try:

1. =emacs -Q -L $OVP_CHECKOUT_DIR=
2. eval the following:
    1. =(require 'org-variable-pitch)=
    2. =(set-face-attribute 'org-variable-pitch-face nil :background "darkorange1")=
3. find some complex org mode file
    1. =M-x org-variable-pitch-minor-mode=

Compare that with doing the following after (2.ii):

- close the org-mode file
- eval the following:
  - =(add-hook 'org-mode-hook 'org-variable-pitch-minor-mode)=
- visit the same org-mode file

In the former case the face is partially applied to list items and
checkboxes, as the orange background will indicate.

Further, in both cases, when the mode is toggled off, the face
application is only partially undone.

** TODO Make a public package archive for this repo

As an alternative method to install from this repo.

- See [[info:elisp#Package%20Archives][info:elisp#Package Archives]]

** DONE Use [[https://ox-hugo.scripter.co/][ox-hugo]] to publish a website for this repo
SCHEDULED: <2018-04-28 Cts>

- [X] Make the website
- [X] Send feedback to Kaushal about the experience

** TODO forecast.el: daily views [0/3]
Implement forecast daily views.

- [ ] Under the graph, each day name is a link
- [ ] which when clicked, opens up a view
- [ ] where the hourly data for that day is rendered.

** DONE Add OVP to Melpa
SCHEDULED: <2018-04-06 Cum>

- [X] Update [[https://github.com/cadadr/elisp/issues/31][issue#31]] on Github when you send the PR to Melpa.
- [X] Accepted?

** TODO dollar.el: ignore quoted expressions when looking for arguments
: ($ '$1)

Should produce

: (lambda nil '$1)

But it currently produces

: (lambda ($1) '$1)

See [[https://www.reddit.com/r/emacs/comments/814wis/dollarel_shorthand_lambda_notation_eg_message/dv0naiu/][this thread]] on Reddit.

** TODO dollar.el: =$*= should stand for the entire argument list
Like =&rest args=.

See [[https://www.reddit.com/r/emacs/comments/814wis/dollarel_shorthand_lambda_notation_eg_message/dv0t2oh/][this thread]] on Reddit.

* Contributing
:PROPERTIES:
:CUSTOM_ID: contributing
:END:

Thanks! Please submit a pull request or e-mail a patch.  Explain
clearly your changes and the rationale for them, and include a clear
commit message, prefixed with the relevant filename.
